{"version":3,"sources":["views/pages/Medicine/addMedicine.js","configs/axiosConfig.js","redux/actions/auth/loginActions.js","navbar/menu.js"],"names":["AddMedicine","React","Component","require","config","axiosInstance","axios","create","baseURL","process","API_URL","loginWithJWT","user","dispatch","post","email","password","then","response","userInfo","data","type","payload","accessToken","token","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","history","push","catch","error","logout","connect","state","auth","login","withRouter","props","useState","isOpen","setIsOpen","color","light","expand","onClick","navbar","className","tag","RRNavLink","to","activeClassName","exact","nav","inNavbar","caret","left","data-toggle","right","href","size","e"],"mappings":"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","file":"static/js/7.8b97fb03.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Menu from \"../../../navbar/menu\";\r\nclass AddMedicine extends React.Component {\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Menu />\r\n            <h4>You're AddMedicine.</h4>;\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AddMedicine;\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.API_URL || \"http://localhost:8000/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n","import { history } from \"../../../history\";\nimport axios from \"../../../configs/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const loginWithJWT = (user) => {\n   return (dispatch) => {\n      axios\n         .post(\"/signin\", {\n            email: user.email,\n            password: user.password,\n         })\n         .then((response) => {\n            let userInfo = response.data.user;\n\n            // console.log(\"Login DATA\", token);\n            if (userInfo) {\n               dispatch({\n                  type: \"LOGIN_WITH_JWT\",\n                  payload: {\n                     userInfo,\n                     accessToken: response.data.token,\n                  },\n               });\n               // console.log(\"Sucess\");\n               toast.success(\"Login Successfully\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n               setTimeout(() => {\n                  history.push(\"/\");\n               }, 2000);\n            } else {\n               // console.log(\"Sucess\");\n               toast.success(\"User email doesn't exist\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n            }\n         })\n         .catch((error) => {\n            // show error message in Toast\n            toast.error(\"User email doesn't exist\", {\n               position: toast.POSITION.BOTTOM_RIGHT,\n            });\n         });\n   };\n};\n\n//Logout Action\nexport const logout = () => {\n   return (dispatch) => {\n      dispatch({ type: \"LOGOUT\" });\n      history.push(\"/login\");\n   };\n};\n","import React, { useState } from \"react\";\r\nimport { withRouter, NavLink as RRNavLink } from \"react-router-dom\";\r\nimport {\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   UncontrolledDropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem,\r\n   NavbarText,\r\n} from \"reactstrap\";\r\nimport * as Icon from \"react-feather\";\r\nimport { logout } from \"../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Menu = (props) => {\r\n   const [isOpen, setIsOpen] = useState(false);\r\n\r\n   const toggle = () => setIsOpen(!isOpen);\r\n\r\n   const handleitem = () => {\r\n      props.logout();\r\n      // console.log('LOGOUT',props.logout)\r\n      props.history.push(\"/login\");\r\n   };\r\n   return (\r\n      <div>\r\n         <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n               <Nav className=\"mr-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink\r\n                        tag={RRNavLink}\r\n                        to={`/`}\r\n                        activeClassName=\"active\"\r\n                        exact\r\n                     >\r\n                        Dashboard\r\n                     </NavLink>\r\n                  </NavItem>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Medicine\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/medicine`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Add Medicine\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Transaction\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/purchase`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Purchase\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/sale`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Sale\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Search\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/show/sale`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Customer Sales Details\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/show/purchase`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Supplier Sales Details\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <NavItem>\r\n                     <NavLink\r\n                        tag={RRNavLink}\r\n                        to={`/show/medicine`}\r\n                        activeClassName=\"active\"\r\n                     >\r\n                        Current Stock\r\n                     </NavLink>\r\n                  </NavItem>\r\n               </Nav>\r\n               <UncontrolledDropdown>\r\n                  <DropdownToggle\r\n                     tag=\"a\"\r\n                     data-toggle=\"dropdown\"\r\n                     className=\"nav-link dropdown-user-link\"\r\n                  >\r\n                     <div className=\"user-nav d-sm-flex d-none\">\r\n                        <span>\r\n                           Owner of : <strong>ABC Medical</strong>\r\n                        </span>\r\n                        &nbsp;\r\n                        <span>\r\n                           Username : <strong>John Doe</strong>\r\n                        </span>\r\n                     </div>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                     <DropdownItem tag=\"a\" href=\"#\">\r\n                        <Icon.User size={14} className=\"mr-50\" />\r\n                        &nbsp;\r\n                        <span className=\"align-middle\">Edit Profile</span>\r\n                     </DropdownItem>\r\n                     <DropdownItem\r\n                        // tag={RRNavLink}\r\n                        // to={`/login`}\r\n                        onClick={(e) => handleitem(e, \"/login\")}\r\n                     >\r\n                        <Icon.Power size={14} className=\"mr-50\" />\r\n                        &nbsp;\r\n                        <span className=\"align-bottom\">logout</span>\r\n                     </DropdownItem>\r\n                  </DropdownMenu>\r\n               </UncontrolledDropdown>\r\n               {/* <NavbarText>Simple Text</NavbarText> */}\r\n            </Collapse>\r\n         </Navbar>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\nexport default connect(mapStateToProps, { logout })(withRouter(Menu));\r\n"],"sourceRoot":""}