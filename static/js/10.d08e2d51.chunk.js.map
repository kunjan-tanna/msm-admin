{"version":3,"sources":["views/pages/Medicine/addMedicine.js","redux/actions/global/index.js","configs/axiosConfig.js","redux/actions/auth/registerActions.js","redux/actions/auth/loginActions.js","navbar/menu.js","redux/actions/medicines/index.js"],"names":["AddMedicine","props","handleInput","event","persist","setState","prevState","formData","target","name","value","ItemUnitCost","state","MRPRate","noOfItemPack","result","SubItemUnitCost","noOfSubItemPack","SubItem","handleQuantity","ItemInPack","console","log","itemInPack","TotalQuantity","quantity","totalQuantity","handleChange","data","handleFormSubmit","obj","itemUnitCost","subItemUnitCost","totalNoOfItem","totalNoOfQuantity","userId","userdata","_id","dispatch","MedicineActions","then","res","client","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","history","push","error","catch","categories","packages","racks","packgeTypes","packageType","userInfo","this","a","axios","get","type","payload","Row","Col","sm","Card","CardHeader","CardTitle","className","CardBody","body","inverse","style","backgroundColor","borderColor","Form","onSubmit","e","preventDefault","md","FormGroup","Label","for","Input","id","placeholder","onChange","isClearable","options","classNamePrefix","required","paddingTop","packageTypes","disabled","Button","color","outline","onClick","handleReset","nextProps","updatedObject","length","map","item","label","categotyName","Object","assign","packageName","packageTypeName","rackName","keys","React","Component","connect","global","auth","login","require","config","axiosInstance","create","baseURL","process","API_URL","RegUsers","firstName","lastName","email","password","ownerOf","address","mobile","post","getUserId","UpdateUsers","status","put","loginWithJWT","user","response","accessToken","token","logout","withRouter","useState","isOpen","setIsOpen","rowData","setData","useEffect","userAction","light","expand","navbar","tag","RRNavLink","to","activeClassName","exact","nav","inNavbar","caret","left","data-toggle","right","size","addMedicine","getMedicine"],"mappings":"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","file":"static/js/10.d08e2d51.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n   Card,\r\n   CardBody,\r\n   Row,\r\n   Col,\r\n   CardHeader,\r\n   CardTitle,\r\n   Button,\r\n   Form,\r\n   Input,\r\n   Label,\r\n   FormGroup,\r\n} from \"reactstrap\";\r\nimport Menu from \"../../../navbar/menu\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport chroma from \"chroma-js\";\r\nimport Select from \"react-select\";\r\nimport { history } from \"../../../history\";\r\nimport { connect } from \"react-redux\";\r\nimport * as globalActions from \"../../../redux/actions/global\";\r\nimport * as MedicineActions from \"../../../redux/actions/medicines\";\r\n\r\nclass AddMedicine extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         categories: this.props.categories,\r\n         packages: this.props.packages,\r\n         racks: this.props.racks,\r\n         packgeTypes: this.props.packageType,\r\n         userdata: this.props.userInfo,\r\n         result: \"\",\r\n         SubItem: \"\",\r\n         totalQuantity: \"\",\r\n         itemInPack: \"\",\r\n         formData: {},\r\n      };\r\n   }\r\n   componentDidMount() {\r\n      this.props.dispatch(globalActions.getCategory());\r\n      this.props.dispatch(globalActions.getPackage());\r\n      this.props.dispatch(globalActions.getRack());\r\n      this.props.dispatch(globalActions.getPackageType());\r\n   }\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n      const updatedObject = {};\r\n\r\n      // Categories\r\n      if (\r\n         nextProps.categories &&\r\n         nextProps.categories.length &&\r\n         nextProps.categories !== prevState.categories\r\n      ) {\r\n         const categories = nextProps.categories.map((item) => {\r\n            return {\r\n               label: item.categotyName,\r\n               value: item._id,\r\n            };\r\n         });\r\n         Object.assign(updatedObject, { categories: categories });\r\n      }\r\n\r\n      // Packages\r\n      if (\r\n         nextProps.packages &&\r\n         nextProps.packages.length &&\r\n         nextProps.packages !== prevState.packages\r\n      ) {\r\n         const packages = nextProps.packages.map((item) => {\r\n            return {\r\n               label: item.packageName,\r\n               value: item._id,\r\n            };\r\n         });\r\n         // console.log(\"--this.props.--\", nextProps.packages);\r\n         Object.assign(updatedObject, { packages: packages });\r\n      }\r\n\r\n      // PackageTypes\r\n      if (\r\n         nextProps.packageTypes &&\r\n         nextProps.packageTypes.length &&\r\n         nextProps.packageTypes !== prevState.packageTypes\r\n      ) {\r\n         const packageTypes = nextProps.packageTypes.map((item) => {\r\n            return {\r\n               label: item.packageTypeName,\r\n               value: item._id,\r\n            };\r\n         });\r\n         // console.log(\"--this.props.--\", nextProps.packageType);\r\n         Object.assign(updatedObject, { packageTypes: packageTypes });\r\n      }\r\n      // Racks\r\n      if (\r\n         nextProps.racks &&\r\n         nextProps.racks.length &&\r\n         nextProps.racks !== prevState.racks\r\n      ) {\r\n         const racks = nextProps.racks.map((item) => {\r\n            return {\r\n               label: item.rackName,\r\n               value: item._id,\r\n            };\r\n         });\r\n         Object.assign(updatedObject, { racks: racks });\r\n      }\r\n\r\n      return Object.keys(updatedObject).length !== 0 ? updatedObject : null;\r\n   }\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState(\r\n         (prevState) => ({\r\n            formData: {\r\n               ...prevState.formData,\r\n               [event.target.name]: event.target.value,\r\n            },\r\n         }),\r\n         () => {\r\n            const ItemUnitCost =\r\n               this.state.formData.MRPRate / this.state.formData.noOfItemPack;\r\n            this.setState({\r\n               result: ItemUnitCost,\r\n            });\r\n            const SubItemUnitCost =\r\n               ItemUnitCost / this.state.formData.noOfSubItemPack;\r\n            this.setState({\r\n               SubItem: SubItemUnitCost,\r\n            });\r\n         }\r\n      );\r\n   };\r\n   handleQuantity = (event) => {\r\n      event.persist();\r\n      this.setState(\r\n         (prevState) => ({\r\n            formData: {\r\n               ...prevState.formData,\r\n               [event.target.name]: event.target.value,\r\n            },\r\n         }),\r\n         () => {\r\n            const ItemInPack =\r\n               this.state.formData.noOfItemPack *\r\n               this.state.formData.noOfSubItemPack;\r\n            console.log(\"itempack\", ItemInPack);\r\n            this.setState({\r\n               itemInPack: ItemInPack,\r\n            });\r\n            const TotalQuantity = this.state.formData.quantity * ItemInPack;\r\n            this.setState({\r\n               totalQuantity: TotalQuantity,\r\n            });\r\n         }\r\n      );\r\n   };\r\n   handleChange = (name, data) => {\r\n      this.setState(\r\n         (prevState) => ({\r\n            formData: {\r\n               ...prevState.formData,\r\n               [name]: data.value,\r\n            },\r\n         }),\r\n         () => console.log(\"dattattaa\", data)\r\n      );\r\n      // ()=>console.log('---setState---',this.state.formData,name,data)\r\n   };\r\n\r\n   handleFormSubmit = () => {\r\n      const obj = this.state.formData;\r\n      obj.itemUnitCost = this.state.result;\r\n      obj.subItemUnitCost = this.state.SubItem;\r\n      obj.totalNoOfItem = this.state.itemInPack;\r\n      obj.totalNoOfQuantity = this.state.totalQuantity;\r\n      obj.userId = this.state.userdata._id;\r\n\r\n      console.log(\"FORMSAATATA\", obj);\r\n      this.props\r\n         .dispatch(MedicineActions.addMedicine(obj))\r\n         .then((res) => {\r\n            console.log(\"Medicine Data\", res);\r\n            if (res.data && res.data.client) {\r\n               toast.success(\"Add Medicine Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n               setTimeout(() => {\r\n                  history.push(\"/show/medicine\");\r\n               }, 3000);\r\n            } else {\r\n               toast.error(\"Add Medicine not Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            }\r\n         })\r\n         .catch((error) => {\r\n            // show error message in Toast\r\n            toast.error(\"Add Medicine not Successfully\", {\r\n               position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n         });\r\n   };\r\n   render() {\r\n      return (\r\n         <Row>\r\n            <Col sm=\"12\">\r\n               <Menu />\r\n               <Card>\r\n                  <CardHeader>\r\n                     <CardTitle>\r\n                        <h4 className=\"mb-0\">Add Medicine</h4>\r\n                     </CardTitle>\r\n                     <CardBody\r\n                        body=\"true\"\r\n                        inverse=\"true\"\r\n                        style={{\r\n                           backgroundColor: \"#7EBDE4\",\r\n                           borderColor: \"#7EBDE4\",\r\n                        }}\r\n                     >\r\n                        <Form\r\n                           onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              this.handleFormSubmit();\r\n                           }}\r\n                        >\r\n                           <Col sm=\"12\">\r\n                              <Row>\r\n                                 <Col md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"name\">Product Name</Label>\r\n                                       <Input\r\n                                          type=\"text\"\r\n                                          id=\"productName\"\r\n                                          name=\"productName\"\r\n                                          placeholder=\"Product Name\"\r\n                                          //required\r\n                                          onChange={this.handleInput}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"name\">Category Name</Label>\r\n                                       <Select\r\n                                          isClearable={false}\r\n                                          //styles={colourStyles}\r\n                                          options={this.state.categories}\r\n                                          className=\"React\"\r\n                                          classNamePrefix=\"select\"\r\n                                          id=\"categoryId\"\r\n                                          name=\"categoryId\"\r\n                                          //onChange={this.handleChange}\r\n                                          onChange={(data) =>\r\n                                             this.handleChange(\r\n                                                \"categoryId\",\r\n                                                data\r\n                                             )\r\n                                          }\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"name\">Package Name</Label>\r\n                                       <Select\r\n                                          isClearable={false}\r\n                                          //styles={colourStyles}\r\n                                          options={this.state.packages}\r\n                                          className=\"React\"\r\n                                          classNamePrefix=\"select\"\r\n                                          id=\"packageId\"\r\n                                          name=\"packageId\"\r\n                                          //onChange={this.handleChange}\r\n                                          onChange={(data) =>\r\n                                             this.handleChange(\r\n                                                \"packageId\",\r\n                                                data\r\n                                             )\r\n                                          }\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">Purchase Rate</Label>\r\n                                       <Input\r\n                                          //required\r\n                                          type=\"number\"\r\n                                          id=\"purchaseRate\"\r\n                                          placeholder=\"Purchase Rate\"\r\n                                          name=\"purchaseRate\"\r\n                                          onChange={this.handleInput}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">MRP Rate</Label>\r\n                                       <Input\r\n                                          required\r\n                                          type=\"number\"\r\n                                          id=\"MRPRate\"\r\n                                          placeholder=\"MRP Rate\"\r\n                                          name=\"MRPRate\"\r\n                                          onChange={this.handleInput}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">Sale Rate</Label>\r\n                                       <Input\r\n                                          //required\r\n                                          type=\"number\"\r\n                                          id=\"saleRate\"\r\n                                          placeholder=\"Sale Rate\"\r\n                                          name=\"saleRate\"\r\n                                          onChange={this.handleInput}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">\r\n                                          No.of Item Pack\r\n                                       </Label>\r\n                                       <Input\r\n                                          required\r\n                                          type=\"number\"\r\n                                          id=\"noOfItemPack\"\r\n                                          placeholder=\"No.of Item Pack\"\r\n                                          name=\"noOfItemPack\"\r\n                                          onChange={this.handleInput}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup style={{ paddingTop: \"30px\" }}>\r\n                                       <Select\r\n                                          isClearable={false}\r\n                                          //styles={colourStyles}\r\n                                          options={this.state.packageTypes}\r\n                                          className=\"React\"\r\n                                          classNamePrefix=\"select\"\r\n                                          id=\"packageTypeId\"\r\n                                          name=\"packageTypeId\"\r\n                                          //onChange={this.handleChange}\r\n                                          onChange={(data) =>\r\n                                             this.handleChange(\r\n                                                \"packageTypeId\",\r\n                                                data\r\n                                             )\r\n                                          }\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"4\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">\r\n                                          Item Unit Cost\r\n                                       </Label>\r\n                                       <Input\r\n                                          disabled\r\n                                          type=\"number\"\r\n                                          id=\"itemUnitCost\"\r\n                                          placeholder=\"Item Unit Cost\"\r\n                                          name=\"itemUnitCost\"\r\n                                          value={\r\n                                             this.state.formData &&\r\n                                             this.state.result\r\n                                                ? this.state.result\r\n                                                : \"\"\r\n                                          }\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">\r\n                                          No.of SubItem Pack\r\n                                       </Label>\r\n                                       <Input\r\n                                          required\r\n                                          type=\"number\"\r\n                                          id=\"noOfSubItemPack\"\r\n                                          placeholder=\"No.of SubItem Pack\"\r\n                                          name=\"noOfSubItemPack\"\r\n                                          onChange={this.handleInput}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">\r\n                                          SubItem Unit Cost\r\n                                       </Label>\r\n                                       <Input\r\n                                          disabled\r\n                                          type=\"number\"\r\n                                          id=\"subItemUnitCost\"\r\n                                          placeholder=\"SubItem Unit Cost\"\r\n                                          name=\"subItemUnitCost\"\r\n                                          value={\r\n                                             this.state.formData &&\r\n                                             this.state.SubItem\r\n                                                ? this.state.SubItem\r\n                                                : \"\"\r\n                                          }\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">\r\n                                          Manufecturing Date\r\n                                       </Label>\r\n                                       <Input\r\n                                          //required\r\n                                          type=\"date\"\r\n                                          id=\"manufecturingDate\"\r\n                                          placeholder=\"Manufecturing Date\"\r\n                                          name=\"manufecturingDate\"\r\n                                          onChange={this.handleInput}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">Expire Date</Label>\r\n                                       <Input\r\n                                          //required\r\n                                          type=\"date\"\r\n                                          id=\"expireDate\"\r\n                                          placeholder=\"Expire Date\"\r\n                                          name=\"expireDate\"\r\n                                          onChange={this.handleInput}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                       <Label for=\"number\">Quantity</Label>\r\n                                       <Input\r\n                                          required\r\n                                          type=\"number\"\r\n                                          id=\"quantity\"\r\n                                          placeholder=\"Quantity\"\r\n                                          name=\"quantity\"\r\n                                          onChange={this.handleQuantity}\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup style={{ paddingTop: \"30px\" }}>\r\n                                       <Input\r\n                                          disabled\r\n                                          type=\"number\"\r\n                                          id=\"totalNoOfItem\"\r\n                                          placeholder=\"Total No.Of Item\"\r\n                                          name=\"totalNoOfItem\"\r\n                                          value={\r\n                                             this.state.formData &&\r\n                                             this.state.itemInPack\r\n                                                ? this.state.itemInPack\r\n                                                : \"\"\r\n                                          }\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <FormGroup style={{ paddingTop: \"30px\" }}>\r\n                                       <Input\r\n                                          disabled\r\n                                          type=\"number\"\r\n                                          id=\"totalNoOfQuantity\"\r\n                                          placeholder=\"Total No.Of Quantity\"\r\n                                          name=\"totalNoOfQuantity\"\r\n                                          value={\r\n                                             this.state.formData &&\r\n                                             this.state.totalQuantity\r\n                                                ? this.state.totalQuantity\r\n                                                : \"\"\r\n                                          }\r\n                                       />\r\n                                    </FormGroup>\r\n                                 </Col>\r\n\r\n                                 <Col md=\"3\" sm=\"12\">\r\n                                    <Card>\r\n                                       <CardHeader>\r\n                                          <CardTitle>\r\n                                             <strong>Rack Entry</strong>\r\n                                          </CardTitle>\r\n                                          <CardBody>\r\n                                             <Row>\r\n                                                <Col>\r\n                                                   <FormGroup>\r\n                                                      <Label for=\"name\">\r\n                                                         Weight\r\n                                                      </Label>\r\n                                                      <Input\r\n                                                         type=\"text\"\r\n                                                         id=\"weight\"\r\n                                                         name=\"weight\"\r\n                                                         placeholder=\"Weight\"\r\n                                                         //required\r\n                                                         onChange={\r\n                                                            this.handleInput\r\n                                                         }\r\n                                                      />\r\n                                                   </FormGroup>\r\n                                                   <FormGroup>\r\n                                                      <Label for=\"name\">\r\n                                                         Rack Number\r\n                                                      </Label>\r\n                                                      <Select\r\n                                                         isClearable={false}\r\n                                                         //styles={colourStyles}\r\n                                                         options={\r\n                                                            this.state.racks\r\n                                                         }\r\n                                                         className=\"React\"\r\n                                                         classNamePrefix=\"select\"\r\n                                                         id=\"rackId\"\r\n                                                         name=\"rackId\"\r\n                                                         //onChange={this.handleChange}\r\n                                                         onChange={(data) =>\r\n                                                            this.handleChange(\r\n                                                               \"rackId\",\r\n                                                               data\r\n                                                            )\r\n                                                         }\r\n                                                      />\r\n                                                   </FormGroup>\r\n                                                </Col>\r\n                                             </Row>\r\n                                          </CardBody>\r\n                                       </CardHeader>\r\n                                    </Card>\r\n                                 </Col>\r\n                                 <Col\r\n                                    className=\"d-flex justify-content-center flex-wrap mt-2\"\r\n                                    sm=\"12\"\r\n                                 >\r\n                                    <Button\r\n                                       className=\"mr-1\"\r\n                                       color=\"primary\"\r\n                                       type=\"submit\"\r\n                                       //onClick={this.props.leadId}\r\n                                    >\r\n                                       Add Medicine\r\n                                    </Button>{\" \"}\r\n                                    &nbsp;\r\n                                    <ToastContainer />\r\n                                    <Button\r\n                                       color=\"primary\"\r\n                                       outline\r\n                                       onClick={() => this.handleReset()}\r\n                                       type=\"button\"\r\n                                    >\r\n                                       Reset\r\n                                    </Button>\r\n                                 </Col>\r\n                              </Row>\r\n                           </Col>\r\n                        </Form>\r\n                     </CardBody>\r\n                  </CardHeader>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      //Once data are store in dispatch variable so whenever use it variable to call like this in below:\r\n      categories: state.global.categories,\r\n      packages: state.global.packages,\r\n      racks: state.global.racks,\r\n      packageTypes: state.global.packageTypes,\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\nexport default connect(mapStateToProps)(AddMedicine);\r\n","import axios from \"../../../configs/axiosConfig\";\r\n\r\n//get Categories\r\nexport const getCategory = () => async (dispatch) => {\r\n   const res = await axios.get(\"/category\");\r\n   if (res) {\r\n      dispatch({ type: \"CATEGORY\", payload: res.data });\r\n   }\r\n   // console.log(res)\r\n   return res;\r\n};\r\n//get packages\r\nexport const getPackage = () => async (dispatch) => {\r\n   const res = await axios.get(\"/package\");\r\n   if (res) {\r\n      dispatch({ type: \"PACKAGE\", payload: res.data });\r\n   }\r\n   return res;\r\n   //console.log(\"leadstatus\",res)\r\n};\r\n//get packagesType\r\nexport const getPackageType = () => async (dispatch) => {\r\n   const res = await axios.get(\"/packageType\");\r\n   if (res) {\r\n      dispatch({ type: \"PACKAGETYPE\", payload: res.data });\r\n   }\r\n   return res;\r\n   //console.log(\"leadstatus\",res)\r\n};\r\n//Get Racks\r\nexport const getRack = () => async (dispatch) => {\r\n   const res = await axios.get(\"/rack\");\r\n   if (res) {\r\n      dispatch({ type: \"RACK\", payload: res.data });\r\n   }\r\n   return res;\r\n};\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL:\r\n      process.env.API_URL || \"https://fast-bastion-32942.herokuapp.com/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n","import axios from \"../../../configs/axiosConfig\";\n\n//Create Add User\nexport const RegUsers = (data) => async (dispatch) => {\n   // console.log(\"ADD USER\",data)\n   let obj = {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      password: data.password,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n   };\n   const res = await axios.post(\"create/users\", obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n\n//Get User By ID\nexport const getUserId = (id) => async (dispatch) => {\n   //console.log(\"LEADContact ID1\",id)\n   const res = await axios.get(`/get/users/${id}`);\n   // console.log(\"--RES\",res)\n   return res;\n};\n\n//Update Add User\nexport const UpdateUsers = (id, data) => async (dispatch) => {\n   let obj = {\n      userId: data._id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n      status: data.status,\n   };\n   console.log(\"ADD USER\", data);\n   const res = await axios.put(`/edit/users/${id}`, obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n","import { history } from \"../../../history\";\nimport axios from \"../../../configs/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const loginWithJWT = (user) => {\n   return (dispatch) => {\n      axios\n         .post(\"/signin\", {\n            email: user.email,\n            password: user.password,\n         })\n         .then((response) => {\n            let userInfo = response.data.user;\n\n            // console.log(\"Login DATA\", token);\n            if (userInfo) {\n               dispatch({\n                  type: \"LOGIN_WITH_JWT\",\n                  payload: {\n                     userInfo,\n                     accessToken: response.data.token,\n                  },\n               });\n               // console.log(\"Sucess\");\n               toast.success(\"Login Successfully\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n               setTimeout(() => {\n                  history.push(\"/\");\n               }, 2000);\n            } else {\n               // console.log(\"Sucess\");\n               toast.success(\"User email doesn't exist\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n            }\n         })\n         .catch((error) => {\n            // show error message in Toast\n            toast.error(\"User email doesn't exist\", {\n               position: toast.POSITION.BOTTOM_RIGHT,\n            });\n         });\n   };\n};\n\n//Logout Action\nexport const logout = () => {\n   return (dispatch) => {\n      dispatch({ type: \"LOGOUT\" });\n      history.push(\"/login\");\n   };\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, NavLink as RRNavLink } from \"react-router-dom\";\r\nimport {\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   UncontrolledDropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem,\r\n   NavbarText,\r\n} from \"reactstrap\";\r\nimport * as Icon from \"react-feather\";\r\nimport { logout } from \"../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport * as userAction from \"../redux/actions/auth/registerActions\";\r\n\r\nconst Menu = (props) => {\r\n   console.log(\"LOGOUT\", props);\r\n   const [isOpen, setIsOpen] = useState(false);\r\n   const [data, setData] = useState({ rowData: [] });\r\n\r\n   const toggle = () => setIsOpen(!isOpen);\r\n\r\n   const handleitem = () => {\r\n      props.logout();\r\n      // console.log('LOGOUT',props.logout)\r\n      props.history.push(\"/login\");\r\n   };\r\n   useEffect(() => {\r\n      const userId = props.userInfo._id;\r\n      props.dispatch(userAction.getUserId(userId)).then((res) => {\r\n         console.log(\"BY Id\", res);\r\n         if (res) {\r\n            setData({ rowData: res.data });\r\n         }\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <div>\r\n         <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n               <Nav className=\"mr-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink\r\n                        tag={RRNavLink}\r\n                        to={`/`}\r\n                        activeClassName=\"active\"\r\n                        exact\r\n                     >\r\n                        Dashboard\r\n                     </NavLink>\r\n                  </NavItem>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Medicine\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/medicine`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Add Medicine\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Transaction\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/purchase`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Purchase\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/sale`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Sale\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Search\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/show/sale`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Customer Sales Details\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/show/purchase`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Supplier Sales Details\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <NavItem>\r\n                     <NavLink\r\n                        tag={RRNavLink}\r\n                        to={`/show/medicine`}\r\n                        activeClassName=\"active\"\r\n                     >\r\n                        Current Stock\r\n                     </NavLink>\r\n                  </NavItem>\r\n               </Nav>\r\n               <UncontrolledDropdown>\r\n                  <DropdownToggle\r\n                     tag=\"a\"\r\n                     data-toggle=\"dropdown\"\r\n                     className=\"nav-link dropdown-user-link\"\r\n                  >\r\n                     <div className=\"user-nav d-sm-flex d-none\">\r\n                        <span>\r\n                           Owner of :{\" \"}\r\n                           <strong>\r\n                              {data.rowData && data.rowData.ownerOf\r\n                                 ? data.rowData.ownerOf\r\n                                 : \"loading...\"}\r\n                           </strong>\r\n                        </span>\r\n                        &nbsp;\r\n                        {console.log(\"DATTTAAA\", data.rowData)}\r\n                        <span>\r\n                           Username :{\" \"}\r\n                           <strong>\r\n                              {data.rowData && data.rowData.lastName\r\n                                 ? data.rowData.lastName\r\n                                 : \"Loading...\"}\r\n                           </strong>\r\n                        </span>\r\n                     </div>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                     <DropdownItem\r\n                        tag={RRNavLink}\r\n                        to={`/edit/profile`}\r\n                        activeClassName=\"active\"\r\n                     >\r\n                        <Icon.User size={14} className=\"mr-50\" />\r\n                        &nbsp;\r\n                        <span className=\"align-middle\">Edit Profile</span>\r\n                     </DropdownItem>\r\n                     <DropdownItem\r\n                        // tag={RRNavLink}\r\n                        // to={`/login`}\r\n                        onClick={(e) => handleitem(e, \"/login\")}\r\n                     >\r\n                        <Icon.Power size={14} className=\"mr-50\" />\r\n                        &nbsp;\r\n                        <span className=\"align-bottom\">logout</span>\r\n                     </DropdownItem>\r\n                  </DropdownMenu>\r\n               </UncontrolledDropdown>\r\n               {/* <NavbarText>Simple Text</NavbarText> */}\r\n            </Collapse>\r\n         </Navbar>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return { logout: () => dispatch(logout()), dispatch };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Menu));\r\n","import axios from \"../../../configs/axiosConfig\";\r\n\r\n//Create Add Medicine\r\nexport const addMedicine = (data) => async (dispatch) => {\r\n   // console.log(\"ADD LEAD\",data)\r\n   const res = await axios.post(\"create/medicine\", data);\r\n   // console.log('Res',res)\r\n   return res;\r\n};\r\n\r\n//Get Medicine\r\nexport const getMedicine = () => async (dispatch) => {\r\n   const res = await axios.get(\"/medicine\");\r\n   // console.log('Get Leads',res)\r\n   if (res) {\r\n      dispatch({ type: \"GET_MEDICINE\", payload: res.data });\r\n   }\r\n   // console.log('Response',res)\r\n   return res;\r\n};\r\n// //Get Category By ID\r\n// export const getCategoryById = (id) => async (dispatch) => {\r\n//   //console.log(\"LEADContact ID1\",id)\r\n//   const res = await axios.get(`/get/category/${id}`);\r\n//   // console.log(\"--RES\",res)\r\n//   return res;\r\n// };\r\n// //Update Category\r\n// export const updateCategory = (id, data) => async (dispatch) => {\r\n//   // console.log(\"ADD LEAD\",data)\r\n//   let obj = {\r\n//     categoryId: data._id,\r\n//     categoryName: data.categoryName,\r\n//   };\r\n//   const res = await axios.put(`edit/category/${id}`, obj);\r\n//   // console.log('Res',res)\r\n//   return res;\r\n// };\r\n// //Delete the Category\r\n// export const deleteCategory = (id) => async (dispatch) => {\r\n//   // console.log('DELCONTACT ID',id)\r\n//   const res = await axios.delete(`/delete/category/${id}`);\r\n//   // console.log('RESPONSE',res)\r\n//   return res;\r\n// };\r\n"],"sourceRoot":""}