{"version":3,"sources":["views/pages/Medicine/showMedicine.js","configs/axiosConfig.js","redux/actions/auth/registerActions.js","redux/actions/auth/loginActions.js","navbar/menu.js","redux/actions/medicines/index.js"],"names":["ShowMedicine","props","handleFilter","e","value","target","data","state","rowData","console","log","filteredData","setState","length","filter","item","startsWithCondition","toLowerCase","startsWith","includesCondition","includes","userInfo","userdata","count","columns","name","selector","maxWidth","sortable","cell","categoryId","categotyName","packageId","packageName","packageTypeId","packageTypeName","moment","createdAt","format","this","dispatch","userAction","_id","then","res","globalActions","map","index","sm","body","inverse","style","backgroundColor","borderColor","className","ownerOf","address","noHeader","subHeader","React","Component","connect","auth","login","require","config","axiosInstance","axios","create","baseURL","process","API_URL","RegUsers","a","obj","firstName","lastName","email","password","mobile","post","getUserId","id","get","UpdateUsers","userId","status","put","loginWithJWT","user","response","type","payload","accessToken","token","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","history","push","catch","error","logout","withRouter","useState","isOpen","setIsOpen","setData","useEffect","color","light","expand","onClick","navbar","tag","RRNavLink","to","activeClassName","exact","nav","inNavbar","caret","left","data-toggle","right","size","addMedicine","getMedicine"],"mappings":"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","file":"static/js/11.eab8bd23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n   Card,\r\n   CardBody,\r\n   CardText,\r\n   CardHeader,\r\n   CardTitle,\r\n   Input,\r\n   Row,\r\n   Col,\r\n} from \"reactstrap\";\r\nimport Menu from \"../../../navbar/menu\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Star, Edit, Trash2, Search, Plus } from \"react-feather\";\r\nimport * as globalActions from \"../../../redux/actions/medicines/index\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\n//import { history } from \"../../history\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as userAction from \"../../../redux/actions/auth/registerActions\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst CustomHeader = (props) => {\r\n   return (\r\n      <div className=\"position-relative has-icon-left mb-1\">\r\n         <Input value={props.value} onChange={(e) => props.handleFilter(e)} />\r\n         <div className=\"form-control-position\">\r\n            <Search size=\"15\" />\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\nclass ShowMedicine extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         rowData: [],\r\n         userInfo: [],\r\n         userdata: this.props.userInfo,\r\n         count: 0,\r\n\r\n         columns: [\r\n            {\r\n               name: \"Number\",\r\n               selector: \"count\",\r\n               maxWidth: \"10px\",\r\n            },\r\n            {\r\n               name: \"Product Name\",\r\n               selector: \"productName\",\r\n               sortable: true,\r\n               maxWidth: \"250px\",\r\n            },\r\n            {\r\n               name: \"Category\",\r\n               selector: \"categoryId.categotyName\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n               cell: (rowData) => {\r\n                  return rowData && rowData.categoryId\r\n                     ? rowData.categoryId.categotyName\r\n                     : \"\";\r\n               },\r\n            },\r\n            {\r\n               name: \"Quantity\",\r\n               selector: \"quantity\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n            },\r\n            {\r\n               name: \"Unit\",\r\n               selector: \"packageId.packageName\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n               cell: (rowData) => {\r\n                  return rowData && rowData.packageId\r\n                     ? rowData.packageId.packageName\r\n                     : \"\";\r\n               },\r\n            },\r\n            {\r\n               name: \"Items\",\r\n               selector: \"totalNoOfItem\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n            },\r\n            {\r\n               name: \"Unit\",\r\n               selector: \"packageTypeId.packageTypeName\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n               cell: (rowData) => {\r\n                  return rowData && rowData.packageTypeId\r\n                     ? rowData.packageTypeId.packageTypeName\r\n                     : \"\";\r\n               },\r\n            },\r\n            {\r\n               name: \"SubItems\",\r\n               selector: \"totalNoOfQuantity\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n            },\r\n            {\r\n               name: \"MRP Rate\",\r\n               selector: \"MRPRate\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n            },\r\n            {\r\n               name: \"Purchase Rate\",\r\n               selector: \"purchaseRate\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n            },\r\n            {\r\n               name: \"Sale Rate\",\r\n               selector: \"saleRate\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n            },\r\n            // {\r\n            //   name: \"Category\",\r\n            //   selector: \"categoryId\",\r\n            //   sortable: true,\r\n            //   minWidth: \"200px\",\r\n            //   // cell : rowData =>{\r\n            //   //   return rowData && rowData.categoryId\r\n            //   //   ?`${rowData.categoryName}`\r\n            //   //   :''\r\n            //   // }\r\n            // },\r\n            {\r\n               name: \"Date Created\",\r\n               selector: \"createdAt\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n               cell: (rowData) => {\r\n                  // console.log('ksdjflksnf',rowData)\r\n                  return rowData\r\n                     ? `${moment(rowData.createdAt).format(\"MM-DD-YYYY\")}`\r\n                     : \"\";\r\n               },\r\n            },\r\n            // {\r\n            //    name: \"Edit\",\r\n            //    selector: \"transactions\",\r\n            //    sortable: true,\r\n            //    maxWidth: \"200px\",\r\n            //    cell: (rowData) => {\r\n            //       return (\r\n            //          <div className=\"actions cursor-pointer\">\r\n            //             <Edit\r\n            //                className=\"mr-50\"\r\n            //                size={15}\r\n            //                //   onClick={() =>\r\n            //                //     history.push({\r\n            //                //       pathname: \"/edit/post\",\r\n            //                //       state: { postId: rowData ? rowData._id : \"\" },\r\n            //                //     })\r\n            //                //   }\r\n            //             />\r\n            //             {/* {console.log('---lead ID',rowData)} */}\r\n            //          </div>\r\n            //       );\r\n            //    },\r\n            // },\r\n            // {\r\n            //   name: \"Delete\",\r\n            //   selector: \"transactions\",\r\n            //   sortable: true,\r\n            //   cell: rowData => {\r\n            //     return (\r\n            //       <div className=\"actions cursor-pointer\">\r\n            //         <Trash2\r\n            //             size={15}\r\n            //             onClick={()=>{\r\n            //               this.onChange(rowData._id)\r\n            //             }}\r\n            //           />\r\n            //         </div>\r\n            //     )\r\n            //   }\r\n            // },\r\n         ],\r\n\r\n         filteredData: [],\r\n         value: \"\",\r\n      };\r\n   }\r\n   async componentDidMount() {\r\n      this.props\r\n         .dispatch(userAction.getUserId(this.state.userdata._id))\r\n         .then((res) => {\r\n            this.setState({ userInfo: res.data });\r\n         });\r\n\r\n      this.props.dispatch(globalActions.getMedicine()).then((res) => {\r\n         console.log(\"get POST----\", res);\r\n         let rowData = res.data;\r\n         rowData.map((item, index) => {\r\n            //console.log(item,index)\r\n            item.count = index + 1;\r\n         });\r\n         this.setState({ rowData });\r\n      });\r\n   }\r\n   // //delete data\r\n   // onChange=(id)=>{\r\n   //   // console.log('LEADID',id)\r\n   //   this.props.dispatch(globalActions.deletePost(id)).then((res)=>{\r\n   //     console.log('RESPONSE-----',res)\r\n   //     let rowData = res.data\r\n   //     rowData.map((item,index)=>{\r\n   //       // console.log(item,index)\r\n   //       item.count=index+1\r\n   //     })\r\n   //   this.setState({ rowData })\r\n   //   })\r\n   // }\r\n\r\n   handleFilter = (e) => {\r\n      let value = e.target.value;\r\n      let data = this.state.rowData;\r\n      console.log(\"abc\", data);\r\n      let filteredData = this.state.filteredData;\r\n      this.setState({ value });\r\n\r\n      if (value.length) {\r\n         filteredData = data.filter((item) => {\r\n            let startsWithCondition = item.rowData\r\n               .toLowerCase()\r\n               .startsWith(value.toLowerCase());\r\n            let includesCondition = item.rowData\r\n               .toLowerCase()\r\n               .includes(value.toLowerCase());\r\n            if (startsWithCondition) {\r\n               return startsWithCondition;\r\n            } else if (!startsWithCondition && includesCondition) {\r\n               return includesCondition;\r\n            } else return null;\r\n         });\r\n         this.setState({ filteredData });\r\n      }\r\n   };\r\n   render() {\r\n      let { columns, userInfo } = this.state;\r\n      return (\r\n         <Row>\r\n            <Col sm=\"12\">\r\n               <Menu />\r\n               <Card\r\n                  body\r\n                  inverse\r\n                  style={{ backgroundColor: \"#333\", borderColor: \"#333\" }}\r\n               >\r\n                  <Row>\r\n                     <Col sm=\"12\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                           <h2>\r\n                              {userInfo && userInfo.ownerOf\r\n                                 ? userInfo.ownerOf\r\n                                 : \"Please Wait.....\"}\r\n                           </h2>\r\n                        </div>\r\n                     </Col>\r\n                     <Col sm=\"12\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                           <CardText className=\"text-muted\">\r\n                              {userInfo && userInfo.address\r\n                                 ? userInfo.address\r\n                                 : \"Please Wait.....\"}\r\n                           </CardText>\r\n                        </div>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n               <Card>\r\n                  <CardHeader>\r\n                     <CardTitle>\r\n                        <strong>Stock Report- All Products</strong>\r\n                     </CardTitle>\r\n                     {/* <div className=\"d-flex flex-wrap flot-right\">\r\n           <Button.Ripple\r\n             color=\"primary\"\r\n             outline\r\n             onClick={() => this.props.history.push(\"/add/post\")}\r\n           >\r\n             Add Post\r\n           </Button.Ripple>\r\n         </div> */}\r\n                  </CardHeader>\r\n                  <CardBody className=\"rdt_Wrapper\">\r\n                     <DataTable\r\n                        className=\"dataTable-custom\"\r\n                        //data={value.length ? filteredData : data}\r\n                        data={this.state.rowData}\r\n                        columns={columns}\r\n                        noHeader\r\n                        //pagination\r\n                        subHeader\r\n                        // subHeaderComponent={\r\n                        //   <CustomHeader value={value} handleFilter={this.handleFilter} />\r\n                        // }\r\n                     />\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\nexport default connect(mapStateToProps)(ShowMedicine);\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL:\r\n      process.env.API_URL || \"https://fast-bastion-32942.herokuapp.com/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n","import axios from \"../../../configs/axiosConfig\";\n\n//Create Add User\nexport const RegUsers = (data) => async (dispatch) => {\n   // console.log(\"ADD USER\",data)\n   let obj = {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      password: data.password,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n   };\n   const res = await axios.post(\"create/users\", obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n\n//Get User By ID\nexport const getUserId = (id) => async (dispatch) => {\n   //console.log(\"LEADContact ID1\",id)\n   const res = await axios.get(`/get/users/${id}`);\n   // console.log(\"--RES\",res)\n   return res;\n};\n\n//Update Add User\nexport const UpdateUsers = (id, data) => async (dispatch) => {\n   let obj = {\n      userId: data._id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n      status: data.status,\n   };\n   console.log(\"ADD USER\", data);\n   const res = await axios.put(`/edit/users/${id}`, obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n","import { history } from \"../../../history\";\nimport axios from \"../../../configs/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const loginWithJWT = (user) => {\n   return (dispatch) => {\n      axios\n         .post(\"/signin\", {\n            email: user.email,\n            password: user.password,\n         })\n         .then((response) => {\n            let userInfo = response.data.user;\n\n            // console.log(\"Login DATA\", token);\n            if (userInfo) {\n               dispatch({\n                  type: \"LOGIN_WITH_JWT\",\n                  payload: {\n                     userInfo,\n                     accessToken: response.data.token,\n                  },\n               });\n               // console.log(\"Sucess\");\n               toast.success(\"Login Successfully\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n               setTimeout(() => {\n                  history.push(\"/\");\n               }, 2000);\n            } else {\n               // console.log(\"Sucess\");\n               toast.success(\"User email doesn't exist\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n            }\n         })\n         .catch((error) => {\n            // show error message in Toast\n            toast.error(\"User email doesn't exist\", {\n               position: toast.POSITION.BOTTOM_RIGHT,\n            });\n         });\n   };\n};\n\n//Logout Action\nexport const logout = () => {\n   return (dispatch) => {\n      dispatch({ type: \"LOGOUT\" });\n      history.push(\"/login\");\n   };\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, NavLink as RRNavLink } from \"react-router-dom\";\r\nimport {\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   UncontrolledDropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem,\r\n   NavbarText,\r\n} from \"reactstrap\";\r\nimport * as Icon from \"react-feather\";\r\nimport { logout } from \"../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport * as userAction from \"../redux/actions/auth/registerActions\";\r\n\r\nconst Menu = (props) => {\r\n   console.log(\"LOGOUT\", props);\r\n   const [isOpen, setIsOpen] = useState(false);\r\n   const [data, setData] = useState({ rowData: [] });\r\n\r\n   const toggle = () => setIsOpen(!isOpen);\r\n\r\n   const handleitem = () => {\r\n      props.logout();\r\n      // console.log('LOGOUT',props.logout)\r\n      props.history.push(\"/login\");\r\n   };\r\n   useEffect(() => {\r\n      const userId = props.userInfo._id;\r\n      props.dispatch(userAction.getUserId(userId)).then((res) => {\r\n         console.log(\"BY Id\", res);\r\n         if (res) {\r\n            setData({ rowData: res.data });\r\n         }\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <div>\r\n         <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n               <Nav className=\"mr-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink\r\n                        tag={RRNavLink}\r\n                        to={`/`}\r\n                        activeClassName=\"active\"\r\n                        exact\r\n                     >\r\n                        Dashboard\r\n                     </NavLink>\r\n                  </NavItem>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Medicine\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/medicine`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Add Medicine\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Transaction\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/purchase`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Purchase\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/sale`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Sale\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Search\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/show/sale`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Customer Sales Details\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/show/purchase`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Supplier Sales Details\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <NavItem>\r\n                     <NavLink\r\n                        tag={RRNavLink}\r\n                        to={`/show/medicine`}\r\n                        activeClassName=\"active\"\r\n                     >\r\n                        Current Stock\r\n                     </NavLink>\r\n                  </NavItem>\r\n               </Nav>\r\n               <UncontrolledDropdown>\r\n                  <DropdownToggle\r\n                     tag=\"a\"\r\n                     data-toggle=\"dropdown\"\r\n                     className=\"nav-link dropdown-user-link\"\r\n                  >\r\n                     <div className=\"user-nav d-sm-flex d-none\">\r\n                        <span>\r\n                           Owner of :{\" \"}\r\n                           <strong>\r\n                              {data.rowData && data.rowData.ownerOf\r\n                                 ? data.rowData.ownerOf\r\n                                 : \"loading...\"}\r\n                           </strong>\r\n                        </span>\r\n                        &nbsp;\r\n                        {console.log(\"DATTTAAA\", data.rowData)}\r\n                        <span>\r\n                           Username :{\" \"}\r\n                           <strong>\r\n                              {data.rowData && data.rowData.lastName\r\n                                 ? data.rowData.lastName\r\n                                 : \"Loading...\"}\r\n                           </strong>\r\n                        </span>\r\n                     </div>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                     <DropdownItem\r\n                        tag={RRNavLink}\r\n                        to={`/edit/profile`}\r\n                        activeClassName=\"active\"\r\n                     >\r\n                        <Icon.User size={14} className=\"mr-50\" />\r\n                        &nbsp;\r\n                        <span className=\"align-middle\">Edit Profile</span>\r\n                     </DropdownItem>\r\n                     <DropdownItem\r\n                        // tag={RRNavLink}\r\n                        // to={`/login`}\r\n                        onClick={(e) => handleitem(e, \"/login\")}\r\n                     >\r\n                        <Icon.Power size={14} className=\"mr-50\" />\r\n                        &nbsp;\r\n                        <span className=\"align-bottom\">logout</span>\r\n                     </DropdownItem>\r\n                  </DropdownMenu>\r\n               </UncontrolledDropdown>\r\n               {/* <NavbarText>Simple Text</NavbarText> */}\r\n            </Collapse>\r\n         </Navbar>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return { logout: () => dispatch(logout()), dispatch };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Menu));\r\n","import axios from \"../../../configs/axiosConfig\";\r\n\r\n//Create Add Medicine\r\nexport const addMedicine = (data) => async (dispatch) => {\r\n   // console.log(\"ADD LEAD\",data)\r\n   const res = await axios.post(\"create/medicine\", data);\r\n   // console.log('Res',res)\r\n   return res;\r\n};\r\n\r\n//Get Medicine\r\nexport const getMedicine = () => async (dispatch) => {\r\n   const res = await axios.get(\"/medicine\");\r\n   // console.log('Get Leads',res)\r\n   if (res) {\r\n      dispatch({ type: \"GET_MEDICINE\", payload: res.data });\r\n   }\r\n   // console.log('Response',res)\r\n   return res;\r\n};\r\n// //Get Category By ID\r\n// export const getCategoryById = (id) => async (dispatch) => {\r\n//   //console.log(\"LEADContact ID1\",id)\r\n//   const res = await axios.get(`/get/category/${id}`);\r\n//   // console.log(\"--RES\",res)\r\n//   return res;\r\n// };\r\n// //Update Category\r\n// export const updateCategory = (id, data) => async (dispatch) => {\r\n//   // console.log(\"ADD LEAD\",data)\r\n//   let obj = {\r\n//     categoryId: data._id,\r\n//     categoryName: data.categoryName,\r\n//   };\r\n//   const res = await axios.put(`edit/category/${id}`, obj);\r\n//   // console.log('Res',res)\r\n//   return res;\r\n// };\r\n// //Delete the Category\r\n// export const deleteCategory = (id) => async (dispatch) => {\r\n//   // console.log('DELCONTACT ID',id)\r\n//   const res = await axios.delete(`/delete/category/${id}`);\r\n//   // console.log('RESPONSE',res)\r\n//   return res;\r\n// };\r\n"],"sourceRoot":""}