{"version":3,"sources":["redux/actions/sale/index.js","views/pages/Sale/getSale.js","configs/axiosConfig.js","redux/actions/auth/registerActions.js"],"names":["addSale","data","dispatch","a","axios","post","res","type","payload","getSaleById","id","get","customStyles","headCells","style","color","GetSale","props","handleFilter","e","value","target","state","rowData","console","log","filteredData","setState","length","filter","item","startsWithCondition","toLowerCase","startsWith","includesCondition","includes","userInfo","userdata","count","columns","name","selector","maxWidth","sortable","cell","abc","customerDetails","map","i","index","customerName","moment","saleDate","format","paymentDetails","paymentBy","nextProps","saleData","this","sm","className","noHeader","React","Component","connect","require","config","axiosInstance","create","baseURL","process","API_URL","RegUsers","obj","firstName","lastName","email","password","ownerOf","address","mobile","getUserId","UpdateUsers","userId","_id","status","put"],"mappings":"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","file":"static/js/23.0f8e8f2d.chunk.js","sourcesContent":["import axios from \"../../../configs/axiosConfig\";\r\n\r\n//Create Add Sale\r\nexport const addSale = (data) => async (dispatch) => {\r\n   // console.log(\"ADD LEAD\",data)\r\n   const res = await axios.post(\"create/sale\", data);\r\n   if (res) {\r\n      dispatch({ type: \"ADD_SALE\", payload: res.data });\r\n   }\r\n   // console.log('Res',res)\r\n   return res;\r\n};\r\n\r\n//Get Medicine\r\nexport const getSale = () => async (dispatch) => {\r\n   const res = await axios.get(\"/sale\");\r\n   // console.log('Get Leads',res)\r\n   if (res) {\r\n      dispatch({ type: \"GET_SALE\", payload: res.data });\r\n   }\r\n   // console.log('Response',res)\r\n   return res;\r\n};\r\n//Get Category By ID\r\nexport const getSaleById = (id) => async (dispatch) => {\r\n   //console.log(\"LEADContact ID1\",id)\r\n   const res = await axios.get(`/get/sale/${id}`);\r\n   // console.log(\"--RES\",res)\r\n   return res;\r\n};\r\n// //Update Medicine\r\n// export const updateMedicine = (id, data) => async (dispatch) => {\r\n//    // console.log(\"ADD LEAD\",data)\r\n//    let obj = {\r\n//       medicineId: data._id,\r\n//       totalNoOfItem: data.totalNoOfItem,\r\n//       totalNoOfQuantity: data.totalNoOfQuantity,\r\n//    };\r\n//    const res = await axios.put(`edit/medicine/${id}`, obj);\r\n//    // console.log('Res',res)\r\n//    return res;\r\n// };\r\n// //Delete the Category\r\n// export const deleteCategory = (id) => async (dispatch) => {\r\n//   // console.log('DELCONTACT ID',id)\r\n//   const res = await axios.delete(`/delete/category/${id}`);\r\n//   // console.log('RESPONSE',res)\r\n//   return res;\r\n// };\r\n","import React from \"react\";\r\nimport {\r\n   Card,\r\n   CardBody,\r\n   CardText,\r\n   CardHeader,\r\n   CardTitle,\r\n   Input,\r\n   Row,\r\n   Col,\r\n} from \"reactstrap\";\r\n\r\nimport DataTable from \"react-data-table-component\";\r\nimport moment from \"moment\";\r\nimport * as userAction from \"../../../redux/actions/auth/registerActions\";\r\nimport * as saleActions from \"../../../redux/actions/sale/index\";\r\nimport { Star, Edit, Trash2, Search, Plus } from \"react-feather\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// const CustomHeader = (props) => {\r\n//    return (\r\n//       <div className=\"position-relative has-icon-left mb-1\">\r\n//          <Input value={props.value} onChange={(e) => props.handleFilter(e)} />\r\n//          <div className=\"form-control-position\">\r\n//             <Search size=\"15\" />\r\n//          </div>\r\n//       </div>\r\n//    );\r\n// };\r\nconst customStyles = {\r\n   headCells: {\r\n      style: {\r\n         color: \"red\", // override the row height\r\n      },\r\n   },\r\n};\r\n\r\nclass GetSale extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         rowData: [],\r\n         userInfo: [],\r\n         userdata: this.props.userInfo,\r\n         count: 0,\r\n\r\n         columns: [\r\n            {\r\n               name: \"Number\",\r\n               selector: \"count\",\r\n               maxWidth: \"100px\",\r\n            },\r\n            {\r\n               name: \"Customer Name\",\r\n               selector: \"customerDetails._id\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n               cell: (rowData) => {\r\n                  let abc =\r\n                     rowData.customerDetails &&\r\n                     rowData.customerDetails.map(\r\n                        (i, index) => i.customerName[index]\r\n                     );\r\n                  // console.log(\"customerr\", abc);\r\n                  return rowData && abc ? abc : \"\";\r\n               },\r\n            },\r\n            {\r\n               name: \"Sale Date\",\r\n               selector: \"saleDate\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n               cell: (rowData) => {\r\n                  return rowData &&\r\n                     moment(rowData.saleDate).format(\"YYYY-MM-DD\")\r\n                     ? moment(rowData.saleDate).format(\"YYYY-MM-DD\")\r\n                     : \"\";\r\n               },\r\n            },\r\n            {\r\n               name: \"Payment By:\",\r\n               selector: \"paymentId.paymentBy\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n               cell: (rowData) => {\r\n                  let abc =\r\n                     rowData.paymentDetails &&\r\n                     rowData.paymentDetails.map((i) => i.paymentBy);\r\n                  console.log(\"abc\", abc);\r\n                  return rowData && abc ? abc : \"\";\r\n               },\r\n            },\r\n\r\n            {\r\n               name: \"Remarks\",\r\n               selector: \"remarks\",\r\n               sortable: true,\r\n               maxWidth: \"200px\",\r\n            },\r\n         ],\r\n\r\n         filteredData: [],\r\n         value: \"\",\r\n      };\r\n   }\r\n   async componentWillReceiveProps(nextProps) {\r\n      let rowData = nextProps.saleData;\r\n      console.log(\"--this.props.--\", rowData);\r\n      rowData.map((item, index) => {\r\n         //console.log(item,index)\r\n         item.count = index + 1;\r\n      });\r\n      this.setState({ rowData });\r\n   }\r\n\r\n   // //delete data\r\n   // onChange=(id)=>{\r\n   //   // console.log('LEADID',id)\r\n   //   this.props.dispatch(globalActions.deletePost(id)).then((res)=>{\r\n   //     console.log('RESPONSE-----',res)\r\n   //     let rowData = res.data\r\n   //     rowData.map((item,index)=>{\r\n   //       // console.log(item,index)\r\n   //       item.count=index+1\r\n   //     })\r\n   //   this.setState({ rowData })\r\n   //   })\r\n   // }\r\n\r\n   handleFilter = (e) => {\r\n      let value = e.target.value;\r\n      let data = this.state.rowData;\r\n      console.log(\"abc\", data);\r\n      let filteredData = this.state.filteredData;\r\n      this.setState({ value });\r\n\r\n      if (value.length) {\r\n         filteredData = data.filter((item) => {\r\n            let startsWithCondition = item.rowData\r\n               .toLowerCase()\r\n               .startsWith(value.toLowerCase());\r\n            let includesCondition = item.rowData\r\n               .toLowerCase()\r\n               .includes(value.toLowerCase());\r\n            if (startsWithCondition) {\r\n               return startsWithCondition;\r\n            } else if (!startsWithCondition && includesCondition) {\r\n               return includesCondition;\r\n            } else return null;\r\n         });\r\n         this.setState({ filteredData });\r\n      }\r\n   };\r\n   render() {\r\n      console.log(\"rowdata\", this.state.rowData);\r\n      let { columns, userInfo } = this.state;\r\n      return (\r\n         <Row>\r\n            <Col sm=\"12\">\r\n               <Card>\r\n                  <CardBody className=\"rdt_Wrapper\">\r\n                     <DataTable\r\n                        className=\"dataTable-custom\"\r\n                        //data={value.length ? filteredData : data}\r\n                        data={this.state.rowData}\r\n                        columns={columns}\r\n                        customStyles={customStyles}\r\n                        noHeader\r\n\r\n                        // subHeaderComponent={\r\n                        //    <CustomHeader\r\n                        //       value={value}\r\n                        //       handleFilter={this.handleFilter}\r\n                        //    />\r\n                        // }\r\n                     />\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {};\r\n};\r\nexport default connect(mapStateToProps)(GetSale);\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL:\r\n      process.env.API_URL || \"https://fast-bastion-32942.herokuapp.com/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n","import axios from \"../../../configs/axiosConfig\";\n\n//Create Add User\nexport const RegUsers = (data) => async (dispatch) => {\n   // console.log(\"ADD USER\",data)\n   let obj = {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      password: data.password,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n   };\n   const res = await axios.post(\"create/users\", obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n\n//Get User By ID\nexport const getUserId = (id) => async (dispatch) => {\n   //console.log(\"LEADContact ID1\",id)\n   const res = await axios.get(`/get/users/${id}`);\n   // console.log(\"--RES\",res)\n   return res;\n};\n\n//Update Add User\nexport const UpdateUsers = (id, data) => async (dispatch) => {\n   let obj = {\n      userId: data._id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n      status: data.status,\n   };\n   console.log(\"ADD USER\", data);\n   const res = await axios.put(`/edit/users/${id}`, obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n"],"sourceRoot":""}