{"version":3,"sources":["views/pages/authentication/Profile.js","configs/axiosConfig.js","redux/actions/auth/registerActions.js","redux/actions/auth/loginActions.js","navbar/menu.js"],"names":["Profile","props","handleInput","event","persist","setState","prevState","formData","target","name","value","handleFormSubmit","userId","state","userData","_id","dispatch","userAction","then","res","data","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","history","push","error","catch","handleReset","userInfo","this","className","sm","onSubmit","e","preventDefault","md","type","firstName","placeholder","onChange","required","lastName","email","ownerOf","address","mobile","color","outline","onClick","React","Component","connect","auth","login","require","config","axiosInstance","axios","create","baseURL","process","API_URL","RegUsers","a","obj","password","post","getUserId","id","get","UpdateUsers","status","put","loginWithJWT","user","response","payload","accessToken","token","logout","withRouter","useState","isOpen","setIsOpen","rowData","setData","useEffect","light","expand","navbar","tag","RRNavLink","to","activeClassName","exact","nav","inNavbar","caret","left","data-toggle","right","size"],"mappings":"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","file":"static/js/21.025b6223.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   Button,\r\n   CardHeader,\r\n   CardBody,\r\n   Card,\r\n   CardTitle,\r\n   Row,\r\n   Col,\r\n   Form,\r\n   FormGroup,\r\n   CustomInput,\r\n   Label,\r\n   Input,\r\n} from \"reactstrap\";\r\nimport * as userAction from \"../../../redux/actions/auth/registerActions\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"../../../history\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Menu from \"../../../navbar/menu\";\r\n\r\nclass Profile extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         formData: {},\r\n\r\n         userData: this.props.userInfo,\r\n      };\r\n   }\r\n   //handle the Input\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState((prevState) => ({\r\n         formData: {\r\n            ...prevState.formData,\r\n            [event.target.name]: event.target.value,\r\n         },\r\n      }));\r\n   };\r\n\r\n   componentDidMount() {\r\n      const userId = this.state.userData._id;\r\n      this.props.dispatch(userAction.getUserId(userId)).then((res) => {\r\n         if (res) {\r\n            this.setState({ formData: res.data }); //() => {console.log();}\r\n         }\r\n      });\r\n   }\r\n\r\n   //To submit the Data\r\n   handleFormSubmit = () => {\r\n      const userId = this.state.userData._id;\r\n      this.props\r\n         .dispatch(userAction.UpdateUsers(userId, this.state.formData))\r\n         .then((res) => {\r\n            if (!res.data) {\r\n               //Add success message in Toast\r\n               // console.log(\"ERROR\");\r\n               toast.error(\"Update is not Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            } else {\r\n               // console.log(\"Sucess\");\r\n               toast.success(\"Update Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n               setTimeout(() => {\r\n                  history.push(\"/\");\r\n               }, 3000);\r\n            }\r\n         })\r\n         .catch((error) => {\r\n            // show error message in Toast\r\n            toast.error(\"Update is not Successfully\", {\r\n               position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n         });\r\n   };\r\n   handleReset = () => {\r\n      this.setState({ formData: {} });\r\n   };\r\n   render() {\r\n      const { formData } = this.state;\r\n\r\n      return (\r\n         <Row className=\"m-0\">\r\n            <Col sm=\"12\" className=\"pt-2\">\r\n               <Menu />\r\n               <Card className=\"rounded-0 mb-0 px-2\">\r\n                  <CardHeader className=\"pb-1\">\r\n                     <CardTitle>\r\n                        <h4 className=\"mb-0\">Update Profile</h4>\r\n                     </CardTitle>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                     <Col sm=\"12\">\r\n                        <Form\r\n                           onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              this.handleFormSubmit();\r\n                           }}\r\n                        >\r\n                           <Row>\r\n                              <Col md=\"4\" sm=\"12\">\r\n                                 <FormGroup>\r\n                                    <Label>FirstName</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       value={\r\n                                          formData && formData.firstName\r\n                                             ? formData.firstName\r\n                                             : \"\"\r\n                                       }\r\n                                       placeholder=\"First Name\"\r\n                                       name=\"firstName\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col md=\"4\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Last Name</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       value={\r\n                                          formData && formData.lastName\r\n                                             ? formData.lastName\r\n                                             : \"\"\r\n                                       }\r\n                                       placeholder=\"Last Name\"\r\n                                       name=\"lastName\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col md=\"4\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Email</Label>\r\n                                    <Input\r\n                                       type=\"email\"\r\n                                       value={\r\n                                          formData && formData.email\r\n                                             ? formData.email\r\n                                             : \"\"\r\n                                       }\r\n                                       placeholder=\"Email\"\r\n                                       name=\"email\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              {/* Note :Keep it as for now Password */}\r\n                              <Col md=\"4\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>OwnerOf</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       value={\r\n                                          formData && formData.ownerOf\r\n                                             ? formData.ownerOf\r\n                                             : \"\"\r\n                                       }\r\n                                       placeholder=\"e.g ABC Medical\"\r\n                                       name=\"ownerOf\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col md=\"4\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Address</Label>\r\n                                    <Input\r\n                                       type=\"textarea\"\r\n                                       value={\r\n                                          formData && formData.address\r\n                                             ? formData.address\r\n                                             : \"\"\r\n                                       }\r\n                                       placeholder=\"Address\"\r\n                                       name=\"address\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col md=\"4\" sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Phone No</Label>\r\n                                    <Input\r\n                                       type=\"Number\"\r\n                                       value={\r\n                                          formData && formData.mobile\r\n                                             ? formData.mobile\r\n                                             : \"\"\r\n                                       }\r\n                                       placeholder=\"Phone No.\"\r\n                                       name=\"mobile\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col\r\n                                 className=\"d-flex justify-content-end flex-wrap mt-2\"\r\n                                 sm=\"12\"\r\n                              >\r\n                                 <Button\r\n                                    className=\"mr-1\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    //onClick={this.props.leadId}\r\n                                 >\r\n                                    Update Profile\r\n                                 </Button>\r\n                                 <ToastContainer />\r\n                                 <Button\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={() => this.handleReset()}\r\n                                    type=\"button\"\r\n                                 >\r\n                                    Reset\r\n                                 </Button>\r\n                              </Col>\r\n                           </Row>\r\n                        </Form>\r\n                     </Col>\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\n// const mapDispatchToProps = (dispatch) => {\r\n//    return { dispatch };\r\n// };\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL:\r\n      process.env.API_URL || \"https://fast-bastion-32942.herokuapp.com/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n","import axios from \"../../../configs/axiosConfig\";\n\n//Create Add User\nexport const RegUsers = (data) => async (dispatch) => {\n   // console.log(\"ADD USER\",data)\n   let obj = {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      password: data.password,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n   };\n   const res = await axios.post(\"create/users\", obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n\n//Get User By ID\nexport const getUserId = (id) => async (dispatch) => {\n   //console.log(\"LEADContact ID1\",id)\n   const res = await axios.get(`/get/users/${id}`);\n   // console.log(\"--RES\",res)\n   return res;\n};\n\n//Update Add User\nexport const UpdateUsers = (id, data) => async (dispatch) => {\n   let obj = {\n      userId: data._id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n      status: data.status,\n   };\n\n   const res = await axios.put(`/edit/users/${id}`, obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n","import { history } from \"../../../history\";\nimport axios from \"../../../configs/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const loginWithJWT = (user) => {\n   return (dispatch) => {\n      axios\n         .post(\"/signin\", {\n            email: user.email,\n            password: user.password,\n         })\n         .then((response) => {\n            let userInfo = response.data.user;\n\n            // console.log(\"Login DATA\", token);\n            if (userInfo) {\n               dispatch({\n                  type: \"LOGIN_WITH_JWT\",\n                  payload: {\n                     userInfo,\n                     accessToken: response.data.token,\n                  },\n               });\n               // console.log(\"Sucess\");\n               toast.success(\"Login Successfully\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n               setTimeout(() => {\n                  history.push(\"/\");\n               }, 2000);\n            } else {\n               // console.log(\"Sucess\");\n               toast.success(\"User email doesn't exist\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n            }\n         })\n         .catch((error) => {\n            // show error message in Toast\n            toast.error(\"User email doesn't exist\", {\n               position: toast.POSITION.BOTTOM_RIGHT,\n            });\n         });\n   };\n};\n\n//Logout Action\nexport const logout = () => {\n   return (dispatch) => {\n      dispatch({ type: \"LOGOUT\" });\n      history.push(\"/login\");\n   };\n};\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, NavLink as RRNavLink } from \"react-router-dom\";\r\nimport {\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   UncontrolledDropdown,\r\n   DropdownToggle,\r\n   DropdownMenu,\r\n   DropdownItem,\r\n   NavbarText,\r\n} from \"reactstrap\";\r\nimport * as Icon from \"react-feather\";\r\nimport { logout } from \"../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport * as userAction from \"../redux/actions/auth/registerActions\";\r\n\r\nconst Menu = (props) => {\r\n   const [isOpen, setIsOpen] = useState(false);\r\n   const [data, setData] = useState({ rowData: [] });\r\n\r\n   const toggle = () => setIsOpen(!isOpen);\r\n\r\n   const handleitem = () => {\r\n      props.logout();\r\n      // console.log('LOGOUT',props.logout)\r\n      props.history.push(\"/login\");\r\n   };\r\n   useEffect(() => {\r\n      const userId = props.userInfo._id;\r\n      props.dispatch(userAction.getUserId(userId)).then((res) => {\r\n         if (res) {\r\n            setData({ rowData: res.data });\r\n         }\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <div>\r\n         <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n               <Nav className=\"mr-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink\r\n                        tag={RRNavLink}\r\n                        to={`/`}\r\n                        activeClassName=\"active\"\r\n                        exact\r\n                     >\r\n                        Dashboard\r\n                     </NavLink>\r\n                  </NavItem>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Medicine\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/medicine`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Add Medicine\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Transaction\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/purchase`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Purchase\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/add/sale`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Sale\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                     <DropdownToggle nav caret>\r\n                        Search\r\n                     </DropdownToggle>\r\n                     <DropdownMenu left=\"true\">\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/show/sale`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Customer Sales Details\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                           tag={RRNavLink}\r\n                           to={`/show/purchase`}\r\n                           activeClassName=\"active\"\r\n                        >\r\n                           Supplier Sales Details\r\n                        </DropdownItem>\r\n                     </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <NavItem>\r\n                     <NavLink\r\n                        tag={RRNavLink}\r\n                        to={`/show/medicine`}\r\n                        activeClassName=\"active\"\r\n                     >\r\n                        Current Stock\r\n                     </NavLink>\r\n                  </NavItem>\r\n               </Nav>\r\n               <UncontrolledDropdown>\r\n                  <DropdownToggle\r\n                     tag=\"a\"\r\n                     data-toggle=\"dropdown\"\r\n                     className=\"nav-link dropdown-user-link\"\r\n                  >\r\n                     <div className=\"user-nav d-sm-flex d-none\">\r\n                        <span>\r\n                           Owner of :{\" \"}\r\n                           <strong>\r\n                              <i>\r\n                                 {data.rowData && data.rowData.ownerOf\r\n                                    ? data.rowData.ownerOf\r\n                                    : \"loading...\"}\r\n                              </i>\r\n                           </strong>\r\n                        </span>\r\n                        &nbsp;\r\n                        <span>\r\n                           Username :{\" \"}\r\n                           <strong>\r\n                              {data.rowData && data.rowData.lastName\r\n                                 ? data.rowData.lastName\r\n                                 : \"Loading...\"}\r\n                           </strong>\r\n                        </span>\r\n                     </div>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                     <DropdownItem\r\n                        tag={RRNavLink}\r\n                        to={`/edit/profile`}\r\n                        activeClassName=\"active\"\r\n                     >\r\n                        <Icon.User size={14} className=\"mr-50\" />\r\n                        &nbsp;\r\n                        <span className=\"align-middle\">Edit Profile</span>\r\n                     </DropdownItem>\r\n                     <DropdownItem\r\n                        // tag={RRNavLink}\r\n                        // to={`/login`}\r\n                        onClick={(e) => handleitem(e, \"/login\")}\r\n                     >\r\n                        <Icon.Power size={14} className=\"mr-50\" />\r\n                        &nbsp;\r\n                        <span className=\"align-bottom\">logout</span>\r\n                     </DropdownItem>\r\n                  </DropdownMenu>\r\n               </UncontrolledDropdown>\r\n               {/* <NavbarText>Simple Text</NavbarText> */}\r\n            </Collapse>\r\n         </Navbar>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      userInfo: state.auth.login.userInfo,\r\n   };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return { logout: () => dispatch(logout()), dispatch };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Menu));\r\n"],"sourceRoot":""}