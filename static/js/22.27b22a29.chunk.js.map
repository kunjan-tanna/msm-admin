{"version":3,"sources":["assets/imgs/MEDICAL-IMAGE.jpg","views/pages/authentication/Login.js","configs/axiosConfig.js","redux/actions/auth/loginActions.js"],"names":["module","exports","Login","props","handleInput","event","persist","setState","prevState","formData","target","name","value","handleFormSubmit","dispatch","loginWithJWT","state","className","sm","xl","lg","md","src","fgImg","alt","onSubmit","e","preventDefault","size","type","placeholder","onChange","this","id","label","to","exact","color","outline","onClick","history","push","React","Component","connect","require","config","axiosInstance","axios","create","baseURL","process","API_URL","user","post","email","password","then","response","userInfo","data","payload","accessToken","token","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","catch","error","logout"],"mappings":"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","file":"static/js/22.27b22a29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MEDICAL-IMAGE.8cc3ad52.jpg\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   Button,\r\n   CardHeader,\r\n   CardBody,\r\n   CardTitle,\r\n   Card,\r\n   Row,\r\n   Col,\r\n   Form,\r\n   FormGroup,\r\n   CustomInput,\r\n   Label,\r\n   Input,\r\n} from \"reactstrap\";\r\nimport { loginWithJWT } from \"../../../redux/actions/auth/loginActions\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { history } from \"../../../history\";\r\nimport fgImg from \"../../../assets/imgs/MEDICAL-IMAGE.jpg\";\r\n\r\nclass Login extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         formData: {},\r\n      };\r\n   }\r\n   //handleInput\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState((prevState) => ({\r\n         formData: {\r\n            ...prevState.formData,\r\n            [event.target.name]: event.target.value,\r\n         },\r\n      }));\r\n   };\r\n   //Handle Form Submit\r\n   handleFormSubmit = () => {\r\n      this.props.dispatch(loginWithJWT(this.state.formData));\r\n   };\r\n   render() {\r\n      return (\r\n         <Row className=\"m-0 justify-content-center\">\r\n            <Col\r\n               sm=\"8\"\r\n               xl=\"7\"\r\n               lg=\"10\"\r\n               md=\"8\"\r\n               className=\"d-flex justify-content-center pt-5\"\r\n            >\r\n               <Card>\r\n                  <Row className=\"m-0\">\r\n                     <Col\r\n                        lg=\"6\"\r\n                        className=\"d-lg-block d-none text-center align-self-center\"\r\n                     >\r\n                        <img src={fgImg} alt=\"fgImg\" />\r\n                     </Col>\r\n                     <Col lg=\"6\" md=\"12\" className=\"p-0\">\r\n                        <Card className=\"rounded-0 mb-0 px-2\">\r\n                           <CardHeader className=\"pb-1\">\r\n                              <CardTitle>\r\n                                 <h4 className=\"mb-0\">Login</h4>\r\n                              </CardTitle>\r\n                           </CardHeader>\r\n                           <p className=\"px-2 ml-4 pt-2\">\r\n                              Welcome back, please login to your account.\r\n                           </p>\r\n                           <CardBody>\r\n                              <Col sm=\"12\">\r\n                                 <Form\r\n                                    onSubmit={(e) => {\r\n                                       e.preventDefault();\r\n                                       this.handleFormSubmit();\r\n                                    }}\r\n                                 >\r\n                                    <Row>\r\n                                       <Col sm=\"12\">\r\n                                          <FormGroup>\r\n                                             <Label>\r\n                                                <Mail size={15} /> Email\r\n                                             </Label>\r\n                                             <Input\r\n                                                type=\"email\"\r\n                                                placeholder=\"Email\"\r\n                                                name=\"email\"\r\n                                                onChange={this.handleInput}\r\n                                             />\r\n                                          </FormGroup>\r\n                                       </Col>\r\n                                       <Col sm=\"12\">\r\n                                          <FormGroup>\r\n                                             <Label>\r\n                                                <Lock size={15} /> Password\r\n                                             </Label>\r\n                                             <Input\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                name=\"password\"\r\n                                                onChange={this.handleInput}\r\n                                             />\r\n                                          </FormGroup>\r\n                                          <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n                                             <CustomInput\r\n                                                className=\"pt-1 ml-2\"\r\n                                                type=\"checkbox\"\r\n                                                name=\"donotcall\"\r\n                                                id=\"donotcall\"\r\n                                                label=\"Remember me\"\r\n                                                //checked = {this.state.formData}\r\n                                                //onChange={this.onCheckChange}\r\n                                             />\r\n                                             <div className=\"float-right\">\r\n                                                <NavLink\r\n                                                   to=\"/forgotpassword\"\r\n                                                   exact\r\n                                                   className=\"nav-link\"\r\n                                                >\r\n                                                   Forgot Password?\r\n                                                </NavLink>\r\n                                             </div>\r\n                                          </FormGroup>\r\n                                          <div className=\"d-flex justify-content-between\">\r\n                                             <Button\r\n                                                color=\"primary\"\r\n                                                outline\r\n                                                onClick={() => {\r\n                                                   history.push(\"/register\");\r\n                                                }}\r\n                                             >\r\n                                                Register\r\n                                             </Button>\r\n                                             <Button\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                             >\r\n                                                Login\r\n                                             </Button>\r\n                                          </div>\r\n                                          <ToastContainer />\r\n                                       </Col>\r\n                                    </Row>\r\n                                 </Form>\r\n                              </Col>\r\n                           </CardBody>\r\n                        </Card>\r\n                     </Col>\r\n                  </Row>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL:\r\n      process.env.API_URL || \"https://fast-bastion-32942.herokuapp.com/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n","import { history } from \"../../../history\";\nimport axios from \"../../../configs/axiosConfig\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const loginWithJWT = (user) => {\n   return (dispatch) => {\n      axios\n         .post(\"/signin\", {\n            email: user.email,\n            password: user.password,\n         })\n         .then((response) => {\n            let userInfo = response.data.user;\n\n            // console.log(\"Login DATA\", token);\n            if (userInfo) {\n               dispatch({\n                  type: \"LOGIN_WITH_JWT\",\n                  payload: {\n                     userInfo,\n                     accessToken: response.data.token,\n                  },\n               });\n               // console.log(\"Sucess\");\n               toast.success(\"Login Successfully\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n               setTimeout(() => {\n                  history.push(\"/\");\n               }, 2000);\n            } else {\n               // console.log(\"Sucess\");\n               toast.success(\"User email doesn't exist\", {\n                  position: toast.POSITION.BOTTOM_RIGHT,\n               });\n            }\n         })\n         .catch((error) => {\n            // show error message in Toast\n            toast.error(\"User email doesn't exist\", {\n               position: toast.POSITION.BOTTOM_RIGHT,\n            });\n         });\n   };\n};\n\n//Logout Action\nexport const logout = () => {\n   return (dispatch) => {\n      dispatch({ type: \"LOGOUT\" });\n      history.push(\"/login\");\n   };\n};\n"],"sourceRoot":""}