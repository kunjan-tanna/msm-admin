{"version":3,"sources":["views/pages/authentication/Register.js","configs/axiosConfig.js","redux/actions/auth/registerActions.js"],"names":["Register","props","handleInput","event","persist","setState","prevState","formData","target","name","value","console","log","state","handleFormSubmit","dispatch","RegUsers","then","res","data","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","history","push","error","catch","handleReset","counter","className","sm","onSubmit","e","preventDefault","type","placeholder","onChange","this","required","color","outline","onClick","React","Component","connect","require","config","axiosInstance","axios","create","baseURL","process","API_URL","a","obj","firstName","lastName","email","password","ownerOf","address","mobile","post","getUserId","id","get","UpdateUsers","userId","_id","status","put"],"mappings":"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","file":"static/js/13.9c2d1107.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   Button,\r\n   CardHeader,\r\n   CardBody,\r\n   Card,\r\n   CardTitle,\r\n   Row,\r\n   Col,\r\n   Form,\r\n   FormGroup,\r\n   CustomInput,\r\n   Label,\r\n   Input,\r\n} from \"reactstrap\";\r\nimport { RegUsers } from \"../../../redux/actions/auth/registerActions\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"../../../history\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nclass Register extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         counter: 0,\r\n         formData: {},\r\n      };\r\n      console.log(\"PROPSSS\", this.props);\r\n   }\r\n   //handle the Input\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState(\r\n         (prevState) => ({\r\n            formData: {\r\n               ...prevState.formData,\r\n               [event.target.name]: event.target.value,\r\n            },\r\n         }),\r\n         () => console.log(this.state.formData)\r\n      );\r\n   };\r\n\r\n   //To submit the Data\r\n   handleFormSubmit = () => {\r\n      this.props\r\n         .dispatch(RegUsers(this.state.formData))\r\n         .then((res) => {\r\n            console.log(\"REGISTER DATAA\", res);\r\n            if (!res.data) {\r\n               //Add success message in Toast\r\n               // console.log(\"ERROR\");\r\n               toast.error(\"Register is not Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            } else {\r\n               // console.log(\"Sucess\");\r\n               toast.success(\"Register Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n               setTimeout(() => {\r\n                  history.push(\"/login\");\r\n               }, 3000);\r\n            }\r\n         })\r\n         .catch((error) => {\r\n            // show error message in Toast\r\n            toast.error(\"Register is not Successfully\", {\r\n               position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n         });\r\n   };\r\n   handleReset = () => {\r\n      this.setState({ formData: {} });\r\n   };\r\n   render() {\r\n      return (\r\n         <Row className=\"m-0\">\r\n            <Col sm=\"12\" className=\" pt-2\">\r\n               <Card className=\"rounded-0 mb-0 px-2\">\r\n                  <CardHeader className=\"pb-1\">\r\n                     <CardTitle>\r\n                        <h4 className=\"mb-0\">Register</h4>\r\n                     </CardTitle>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                     <Col sm=\"12\">\r\n                        <Form\r\n                           onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              this.handleFormSubmit();\r\n                           }}\r\n                        >\r\n                           <Row>\r\n                              <Col sm=\"12\">\r\n                                 <FormGroup>\r\n                                    <Label>FirstName</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"First Name\"\r\n                                       name=\"firstName\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Last Name</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"Last Name\"\r\n                                       name=\"lastName\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Email</Label>\r\n                                    <Input\r\n                                       type=\"email\"\r\n                                       placeholder=\"Email\"\r\n                                       name=\"email\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Password</Label>\r\n                                    <Input\r\n                                       type=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       name=\"password\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>OwnerOf</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"e.g ABC Medical\"\r\n                                       name=\"ownerOf\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Address</Label>\r\n                                    <Input\r\n                                       type=\"textarea\"\r\n                                       placeholder=\"Address\"\r\n                                       name=\"address\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Phone No</Label>\r\n                                    <Input\r\n                                       type=\"Number\"\r\n                                       placeholder=\"Phone No.\"\r\n                                       name=\"mobile\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n\r\n                                 <Col\r\n                                    className=\"d-flex justify-content-end flex-wrap mt-2\"\r\n                                    sm=\"12\"\r\n                                 >\r\n                                    <Button\r\n                                       className=\"mr-1\"\r\n                                       color=\"primary\"\r\n                                       type=\"submit\"\r\n                                       //onClick={this.props.leadId}\r\n                                    >\r\n                                       Register\r\n                                    </Button>\r\n                                    <ToastContainer />\r\n                                    <Button\r\n                                       color=\"primary\"\r\n                                       outline\r\n                                       onClick={() => this.handleReset()}\r\n                                       type=\"button\"\r\n                                    >\r\n                                       Reset\r\n                                    </Button>\r\n                                 </Col>\r\n                              </Col>\r\n                           </Row>\r\n                        </Form>\r\n                     </Col>\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return { dispatch };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Register);\r\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n   baseURL:\r\n      process.env.API_URL || \"https://fast-bastion-32942.herokuapp.com/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n","import axios from \"../../../configs/axiosConfig\";\n\n//Create Add User\nexport const RegUsers = (data) => async (dispatch) => {\n   // console.log(\"ADD USER\",data)\n   let obj = {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      password: data.password,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n   };\n   const res = await axios.post(\"create/users\", obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n\n//Get User By ID\nexport const getUserId = (id) => async (dispatch) => {\n   //console.log(\"LEADContact ID1\",id)\n   const res = await axios.get(`/get/users/${id}`);\n   // console.log(\"--RES\",res)\n   return res;\n};\n\n//Update Add User\nexport const UpdateUsers = (id, data) => async (dispatch) => {\n   let obj = {\n      userId: data._id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n      status: data.status,\n   };\n   console.log(\"ADD USER\", data);\n   const res = await axios.put(`/edit/users/${id}`, obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n"],"sourceRoot":""}