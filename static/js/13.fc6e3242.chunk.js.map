{"version":3,"sources":["views/pages/authentication/Register.js","redux/actions/auth/registerActions.js","configs/axiosConfig.js"],"names":["Register","props","handleInput","event","persist","setState","prevState","formData","target","name","value","console","log","state","handleFormSubmit","data","dispatch","a","obj","firstName","lastName","email","password","ownerOf","address","mobile","axios","post","res","then","toast","success","position","POSITION","BOTTOM_RIGHT","setTimeout","history","push","error","catch","handleReset","counter","Row","className","Col","sm","Card","CardHeader","CardTitle","CardBody","Form","onSubmit","e","preventDefault","FormGroup","Label","Input","type","placeholder","onChange","this","required","Button","color","outline","onClick","React","Component","connect","require","config","axiosInstance","create","baseURL","process","API_URL"],"mappings":"sXAsBMA,G,wDACH,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IAQTC,YAAc,SAACC,GACZA,EAAMC,UACN,EAAKC,UACF,SAACC,GAAD,MAAgB,CACbC,SAAS,2BACHD,EAAUC,UADR,kBAEJJ,EAAMK,OAAOC,KAAON,EAAMK,OAAOE,YAGxC,kBAAMC,QAAQC,IAAI,EAAKC,MAAMN,cAlBhB,EAuBnBO,iBAAmB,WC3CE,IAACC,ED4CnB,EAAKd,MACDe,UC7CeD,ED6CG,EAAKF,MAAMN,SC7Cf,uCAAU,WAAOS,GAAP,iBAAAC,EAAA,6DAE3BC,EAAM,CACPC,UAAWJ,EAAKI,UAChBC,SAAUL,EAAKK,SACfC,MAAON,EAAKM,MACZC,SAAUP,EAAKO,SACfC,QAASR,EAAKQ,QACdC,QAAST,EAAKS,QACdC,OAAQV,EAAKU,QATe,SAWbC,IAAMC,KAAK,eAAgBT,GAXd,cAWzBU,EAXyB,yBAaxBA,GAbwB,2CAAV,wDD8CdC,MAAK,SAACD,GACJjB,QAAQC,IAAI,iBAAkBgB,GACzBA,EAAIb,MAQNe,IAAMC,QAAQ,wBAAyB,CACpCC,SAAUF,IAAMG,SAASC,eAE5BC,YAAW,WACRC,IAAQC,KAAK,YACb,MAVHP,IAAMQ,MAAM,+BAAgC,CACzCN,SAAUF,IAAMG,SAASC,kBAYjCK,OAAM,SAACD,GAELR,IAAMQ,MAAM,+BAAgC,CACzCN,SAAUF,IAAMG,SAASC,mBA/ClB,EAmDnBM,YAAc,WACX,EAAKnC,SAAS,CAAEE,SAAU,MAlD1B,EAAKM,MAAQ,CACV4B,QAAS,EACTlC,SAAU,IAEbI,QAAQC,IAAI,UAAW,EAAKX,OANZ,E,qDAsDT,IAAD,OACN,OACG,kBAACyC,EAAA,EAAD,CAAKC,UAAU,OACZ,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKF,UAAU,SACpB,kBAACG,EAAA,EAAD,CAAMH,UAAU,uBACb,kBAACI,EAAA,EAAD,CAAYJ,UAAU,QACnB,kBAACK,EAAA,EAAD,KACG,wBAAIL,UAAU,QAAd,cAGN,kBAACM,EAAA,EAAD,KACG,kBAACL,EAAA,EAAD,CAAKC,GAAG,MACL,kBAACK,EAAA,EAAD,CACGC,SAAU,SAACC,GACRA,EAAEC,iBACF,EAAKvC,qBAGR,kBAAC4B,EAAA,EAAD,KACG,kBAACE,EAAA,EAAD,CAAKC,GAAG,MACL,kBAACS,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,CACGC,KAAK,OACLC,YAAY,aACZjD,KAAK,YACLkD,SAAUC,KAAK1D,YACf2D,UAAQ,MAIjB,kBAACjB,EAAA,EAAD,CAAKC,GAAG,MACL,kBAACS,EAAA,EAAD,CAAWX,UAAU,oBAClB,kBAACY,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,CACGC,KAAK,OACLC,YAAY,YACZjD,KAAK,WACLkD,SAAUC,KAAK1D,YACf2D,UAAQ,KAGd,kBAACP,EAAA,EAAD,CAAWX,UAAU,oBAClB,kBAACY,EAAA,EAAD,cACA,kBAACC,EAAA,EAAD,CACGC,KAAK,QACLC,YAAY,QACZjD,KAAK,QACLkD,SAAUC,KAAK1D,YACf2D,UAAQ,KAGd,kBAACP,EAAA,EAAD,CAAWX,UAAU,oBAClB,kBAACY,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACGC,KAAK,WACLC,YAAY,WACZjD,KAAK,WACLkD,SAAUC,KAAK1D,YACf2D,UAAQ,KAGd,kBAACP,EAAA,EAAD,CAAWX,UAAU,oBAClB,kBAACY,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,CACGC,KAAK,OACLC,YAAY,kBACZjD,KAAK,UACLkD,SAAUC,KAAK1D,YACf2D,UAAQ,KAGd,kBAACP,EAAA,EAAD,CAAWX,UAAU,oBAClB,kBAACY,EAAA,EAAD,gBACA,kBAACC,EAAA,EAAD,CACGC,KAAK,WACLC,YAAY,UACZjD,KAAK,UACLkD,SAAUC,KAAK1D,eAGrB,kBAACoD,EAAA,EAAD,CAAWX,UAAU,oBAClB,kBAACY,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACGC,KAAK,SACLC,YAAY,YACZjD,KAAK,SACLkD,SAAUC,KAAK1D,eAIrB,kBAAC0C,EAAA,EAAD,CACGD,UAAU,4CACVE,GAAG,MAEH,kBAACiB,EAAA,EAAD,CACGnB,UAAU,OACVoB,MAAM,UACNN,KAAK,UAHR,YAQA,kBAAC,IAAD,MACA,kBAACK,EAAA,EAAD,CACGC,MAAM,UACNC,SAAO,EACPC,QAAS,kBAAM,EAAKzB,eACpBiB,KAAK,UAJR,sB,GA/JbS,IAAMC,YAuLdC,sBAAQ,MAJI,SAACpD,GACzB,MAAO,CAAEA,cAGGoD,CAAkCpE,I,gCE7MjD,qBACAqE,EAAQ,IAAUC,SAElB,IAAMC,EAAgB7C,IAAM8C,OAAO,CACjCC,QAASC,6HAAYC,SAAW,+BAGnBJ","file":"static/js/13.fc6e3242.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   Button,\r\n   CardHeader,\r\n   CardBody,\r\n   Card,\r\n   CardTitle,\r\n   Row,\r\n   Col,\r\n   Form,\r\n   FormGroup,\r\n   CustomInput,\r\n   Label,\r\n   Input,\r\n} from \"reactstrap\";\r\nimport { RegUsers } from \"../../../redux/actions/auth/registerActions\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"../../../history\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nclass Register extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         counter: 0,\r\n         formData: {},\r\n      };\r\n      console.log(\"PROPSSS\", this.props);\r\n   }\r\n   //handle the Input\r\n   handleInput = (event) => {\r\n      event.persist();\r\n      this.setState(\r\n         (prevState) => ({\r\n            formData: {\r\n               ...prevState.formData,\r\n               [event.target.name]: event.target.value,\r\n            },\r\n         }),\r\n         () => console.log(this.state.formData)\r\n      );\r\n   };\r\n\r\n   //To submit the Data\r\n   handleFormSubmit = () => {\r\n      this.props\r\n         .dispatch(RegUsers(this.state.formData))\r\n         .then((res) => {\r\n            console.log(\"REGISTER DATAA\", res);\r\n            if (!res.data) {\r\n               //Add success message in Toast\r\n               // console.log(\"ERROR\");\r\n               toast.error(\"Register is not Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n            } else {\r\n               // console.log(\"Sucess\");\r\n               toast.success(\"Register Successfully\", {\r\n                  position: toast.POSITION.BOTTOM_RIGHT,\r\n               });\r\n               setTimeout(() => {\r\n                  history.push(\"/login\");\r\n               }, 3000);\r\n            }\r\n         })\r\n         .catch((error) => {\r\n            // show error message in Toast\r\n            toast.error(\"Register is not Successfully\", {\r\n               position: toast.POSITION.BOTTOM_RIGHT,\r\n            });\r\n         });\r\n   };\r\n   handleReset = () => {\r\n      this.setState({ formData: {} });\r\n   };\r\n   render() {\r\n      return (\r\n         <Row className=\"m-0\">\r\n            <Col sm=\"12\" className=\" pt-2\">\r\n               <Card className=\"rounded-0 mb-0 px-2\">\r\n                  <CardHeader className=\"pb-1\">\r\n                     <CardTitle>\r\n                        <h4 className=\"mb-0\">Register</h4>\r\n                     </CardTitle>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                     <Col sm=\"12\">\r\n                        <Form\r\n                           onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              this.handleFormSubmit();\r\n                           }}\r\n                        >\r\n                           <Row>\r\n                              <Col sm=\"12\">\r\n                                 <FormGroup>\r\n                                    <Label>FirstName</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"First Name\"\r\n                                       name=\"firstName\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                              </Col>\r\n                              <Col sm=\"12\">\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Last Name</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"Last Name\"\r\n                                       name=\"lastName\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Email</Label>\r\n                                    <Input\r\n                                       type=\"email\"\r\n                                       placeholder=\"Email\"\r\n                                       name=\"email\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Password</Label>\r\n                                    <Input\r\n                                       type=\"password\"\r\n                                       placeholder=\"Password\"\r\n                                       name=\"password\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>OwnerOf</Label>\r\n                                    <Input\r\n                                       type=\"text\"\r\n                                       placeholder=\"e.g ABC Medical\"\r\n                                       name=\"ownerOf\"\r\n                                       onChange={this.handleInput}\r\n                                       required\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Address</Label>\r\n                                    <Input\r\n                                       type=\"textarea\"\r\n                                       placeholder=\"Address\"\r\n                                       name=\"address\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n                                 <FormGroup className=\"form-label-group\">\r\n                                    <Label>Phone No</Label>\r\n                                    <Input\r\n                                       type=\"Number\"\r\n                                       placeholder=\"Phone No.\"\r\n                                       name=\"mobile\"\r\n                                       onChange={this.handleInput}\r\n                                    />\r\n                                 </FormGroup>\r\n\r\n                                 <Col\r\n                                    className=\"d-flex justify-content-end flex-wrap mt-2\"\r\n                                    sm=\"12\"\r\n                                 >\r\n                                    <Button\r\n                                       className=\"mr-1\"\r\n                                       color=\"primary\"\r\n                                       type=\"submit\"\r\n                                       //onClick={this.props.leadId}\r\n                                    >\r\n                                       Register\r\n                                    </Button>\r\n                                    <ToastContainer />\r\n                                    <Button\r\n                                       color=\"primary\"\r\n                                       outline\r\n                                       onClick={() => this.handleReset()}\r\n                                       type=\"button\"\r\n                                    >\r\n                                       Reset\r\n                                    </Button>\r\n                                 </Col>\r\n                              </Col>\r\n                           </Row>\r\n                        </Form>\r\n                     </Col>\r\n                  </CardBody>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      );\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return { dispatch };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Register);\r\n","import axios from \"../../../configs/axiosConfig\";\n\n//Create Add User\nexport const RegUsers = (data) => async (dispatch) => {\n   // console.log(\"ADD USER\",data)\n   let obj = {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      password: data.password,\n      ownerOf: data.ownerOf,\n      address: data.address,\n      mobile: data.mobile,\n   };\n   const res = await axios.post(\"create/users\", obj);\n   // console.log(\"ADD USER=======\",res)\n   return res;\n};\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.API_URL || \"http://localhost:8000/api/\",\r\n});\r\n\r\nexport default axiosInstance;\r\n"],"sourceRoot":""}